import streamlit as st

# https://towardsdatascience.com/a-dive-into-decision-trees-a128923c9298

# https://towardsdatascience.com/understanding-random-forest-58381e0602d2

# https://towardsdatascience.com/support-vector-machine-introduction-to-machine-learning-algorithms-934a444fca47

# https://www.javatpoint.com/k-nearest-neighbor-algorithm-for-machine-learning

def app():
    st.image("./static/pic01.jpg")

    st.header("Sport Analysis By Machine Learning")

    st.markdown("""A statistical review of soccer(football) is taken for granted. 
                Statistics like shots taken by each team are easily accessed by public. 
                This gives good resources for analyzing the performance of teams by machine learning""")

    st.markdown("""Belows are the commonly used machine learning methods:""")

    with st.expander("Decision Trees", expanded = False):
        st.title('Decision Trees')

        st.write("""Decision Trees can be used for both classification and regression. 
                    The methodologies are a bit different, though principles are the same. 
                    The decision trees use the CART algorithm (Classification and Regression Trees). 
                    In both cases, decisions are based on conditions on any of the features. 
                    The internal nodes represent the conditions and the leaf nodes represent the decision based on the conditions.""")

        st.image("./static/decision_tree01.png")

    with st.expander("Random Forest", expanded = False):
        st.title("Random Forest")
        st.write("""A random forest algorithm consists of many decision trees. 
                    The ‘forest’ generated by the random forest algorithm is trained through bagging or bootstrap aggregating. 
                    Bagging is an ensemble meta-algorithm that improves the accuracy of machine learning algorithms.""")

        st.write("""The (random forest) algorithm establishes the outcome based on the predictions of the decision trees. 
                    It predicts by taking the average or mean of the output from various trees. 
                    Increasing the number of trees increases the precision of the outcome.""")

        st.image("./static/random_forest01.png")

    with st.expander("Support Vector Machine(SVM)", expanded = False):
        st.title("Support Vector Machine(SVM)")
        st.write("""The objective of the support vector machine algorithm is to find a hyperplane in an N-dimensional space(N — the number of features) 
                    that distinctly classifies the data points.""")

        st.write("""To separate the two classes of data points, there are many possible hyperplanes that could be chosen""")

        st.image("./static/svm01.png")

        st.write("""Our objective is to find a plane that has the maximum margin, 
                    i.e the maximum distance between data points of both classes. 
                    Maximizing the margin distance provides some reinforcement so that future data points can be classified with more confidence.""")

        st.image("./static/svm02.png")

    with st.expander("K-Nearest Neighbor(KNN)", expanded = False):
        st.title("K-Nearest Neighbor(KNN)")
        st.write("""The K-NN working can be explained on the basis of the below algorithm:
                    Step-1: Select the number K of the neighbors
                    Step-2: Calculate the Euclidean distance of K number of neighbors
                    Step-3: Take the K nearest neighbors as per the calculated Euclidean distance.
                    Step-4: Among these k neighbors, count the number of the data points in each category.
                    Step-5: Assign the new data points to that category for which the number of the neighbor is maximum.
                    Step-6: Our model is ready.
                """)

        st.image("./static/knn01.png")


